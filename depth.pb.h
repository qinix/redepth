// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: depth.proto

#ifndef PROTOBUF_INCLUDED_depth_2eproto
#define PROTOBUF_INCLUDED_depth_2eproto

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3006001
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#define PROTOBUF_INTERNAL_EXPORT_protobuf_depth_2eproto 

namespace protobuf_depth_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[2];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
}  // namespace protobuf_depth_2eproto
namespace redepth {
class Depth;
class DepthDefaultTypeInternal;
extern DepthDefaultTypeInternal _Depth_default_instance_;
class PriceLevel;
class PriceLevelDefaultTypeInternal;
extern PriceLevelDefaultTypeInternal _PriceLevel_default_instance_;
}  // namespace redepth
namespace google {
namespace protobuf {
template<> ::redepth::Depth* Arena::CreateMaybeMessage<::redepth::Depth>(Arena*);
template<> ::redepth::PriceLevel* Arena::CreateMaybeMessage<::redepth::PriceLevel>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace redepth {

// ===================================================================

class PriceLevel : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:redepth.PriceLevel) */ {
 public:
  PriceLevel();
  virtual ~PriceLevel();

  PriceLevel(const PriceLevel& from);

  inline PriceLevel& operator=(const PriceLevel& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PriceLevel(PriceLevel&& from) noexcept
    : PriceLevel() {
    *this = ::std::move(from);
  }

  inline PriceLevel& operator=(PriceLevel&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const PriceLevel& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const PriceLevel* internal_default_instance() {
    return reinterpret_cast<const PriceLevel*>(
               &_PriceLevel_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(PriceLevel* other);
  friend void swap(PriceLevel& a, PriceLevel& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PriceLevel* New() const final {
    return CreateMaybeMessage<PriceLevel>(NULL);
  }

  PriceLevel* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<PriceLevel>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const PriceLevel& from);
  void MergeFrom(const PriceLevel& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(PriceLevel* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string price = 1;
  void clear_price();
  static const int kPriceFieldNumber = 1;
  const ::std::string& price() const;
  void set_price(const ::std::string& value);
  #if LANG_CXX11
  void set_price(::std::string&& value);
  #endif
  void set_price(const char* value);
  void set_price(const char* value, size_t size);
  ::std::string* mutable_price();
  ::std::string* release_price();
  void set_allocated_price(::std::string* price);

  // string amount = 2;
  void clear_amount();
  static const int kAmountFieldNumber = 2;
  const ::std::string& amount() const;
  void set_amount(const ::std::string& value);
  #if LANG_CXX11
  void set_amount(::std::string&& value);
  #endif
  void set_amount(const char* value);
  void set_amount(const char* value, size_t size);
  ::std::string* mutable_amount();
  ::std::string* release_amount();
  void set_allocated_amount(::std::string* amount);

  // uint64 order_count = 3;
  void clear_order_count();
  static const int kOrderCountFieldNumber = 3;
  ::google::protobuf::uint64 order_count() const;
  void set_order_count(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:redepth.PriceLevel)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr price_;
  ::google::protobuf::internal::ArenaStringPtr amount_;
  ::google::protobuf::uint64 order_count_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_depth_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Depth : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:redepth.Depth) */ {
 public:
  Depth();
  virtual ~Depth();

  Depth(const Depth& from);

  inline Depth& operator=(const Depth& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Depth(Depth&& from) noexcept
    : Depth() {
    *this = ::std::move(from);
  }

  inline Depth& operator=(Depth&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Depth& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Depth* internal_default_instance() {
    return reinterpret_cast<const Depth*>(
               &_Depth_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  void Swap(Depth* other);
  friend void swap(Depth& a, Depth& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Depth* New() const final {
    return CreateMaybeMessage<Depth>(NULL);
  }

  Depth* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Depth>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const Depth& from);
  void MergeFrom(const Depth& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Depth* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .redepth.PriceLevel asks = 2;
  int asks_size() const;
  void clear_asks();
  static const int kAsksFieldNumber = 2;
  ::redepth::PriceLevel* mutable_asks(int index);
  ::google::protobuf::RepeatedPtrField< ::redepth::PriceLevel >*
      mutable_asks();
  const ::redepth::PriceLevel& asks(int index) const;
  ::redepth::PriceLevel* add_asks();
  const ::google::protobuf::RepeatedPtrField< ::redepth::PriceLevel >&
      asks() const;

  // repeated .redepth.PriceLevel bids = 3;
  int bids_size() const;
  void clear_bids();
  static const int kBidsFieldNumber = 3;
  ::redepth::PriceLevel* mutable_bids(int index);
  ::google::protobuf::RepeatedPtrField< ::redepth::PriceLevel >*
      mutable_bids();
  const ::redepth::PriceLevel& bids(int index) const;
  ::redepth::PriceLevel* add_bids();
  const ::google::protobuf::RepeatedPtrField< ::redepth::PriceLevel >&
      bids() const;

  // string updated_at = 5;
  void clear_updated_at();
  static const int kUpdatedAtFieldNumber = 5;
  const ::std::string& updated_at() const;
  void set_updated_at(const ::std::string& value);
  #if LANG_CXX11
  void set_updated_at(::std::string&& value);
  #endif
  void set_updated_at(const char* value);
  void set_updated_at(const char* value, size_t size);
  ::std::string* mutable_updated_at();
  ::std::string* release_updated_at();
  void set_allocated_updated_at(::std::string* updated_at);

  // uint64 change_id = 4;
  void clear_change_id();
  static const int kChangeIdFieldNumber = 4;
  ::google::protobuf::uint64 change_id() const;
  void set_change_id(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:redepth.Depth)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::redepth::PriceLevel > asks_;
  ::google::protobuf::RepeatedPtrField< ::redepth::PriceLevel > bids_;
  ::google::protobuf::internal::ArenaStringPtr updated_at_;
  ::google::protobuf::uint64 change_id_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_depth_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// PriceLevel

// string price = 1;
inline void PriceLevel::clear_price() {
  price_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& PriceLevel::price() const {
  // @@protoc_insertion_point(field_get:redepth.PriceLevel.price)
  return price_.GetNoArena();
}
inline void PriceLevel::set_price(const ::std::string& value) {
  
  price_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:redepth.PriceLevel.price)
}
#if LANG_CXX11
inline void PriceLevel::set_price(::std::string&& value) {
  
  price_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:redepth.PriceLevel.price)
}
#endif
inline void PriceLevel::set_price(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  price_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:redepth.PriceLevel.price)
}
inline void PriceLevel::set_price(const char* value, size_t size) {
  
  price_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:redepth.PriceLevel.price)
}
inline ::std::string* PriceLevel::mutable_price() {
  
  // @@protoc_insertion_point(field_mutable:redepth.PriceLevel.price)
  return price_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PriceLevel::release_price() {
  // @@protoc_insertion_point(field_release:redepth.PriceLevel.price)
  
  return price_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PriceLevel::set_allocated_price(::std::string* price) {
  if (price != NULL) {
    
  } else {
    
  }
  price_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), price);
  // @@protoc_insertion_point(field_set_allocated:redepth.PriceLevel.price)
}

// string amount = 2;
inline void PriceLevel::clear_amount() {
  amount_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& PriceLevel::amount() const {
  // @@protoc_insertion_point(field_get:redepth.PriceLevel.amount)
  return amount_.GetNoArena();
}
inline void PriceLevel::set_amount(const ::std::string& value) {
  
  amount_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:redepth.PriceLevel.amount)
}
#if LANG_CXX11
inline void PriceLevel::set_amount(::std::string&& value) {
  
  amount_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:redepth.PriceLevel.amount)
}
#endif
inline void PriceLevel::set_amount(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  amount_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:redepth.PriceLevel.amount)
}
inline void PriceLevel::set_amount(const char* value, size_t size) {
  
  amount_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:redepth.PriceLevel.amount)
}
inline ::std::string* PriceLevel::mutable_amount() {
  
  // @@protoc_insertion_point(field_mutable:redepth.PriceLevel.amount)
  return amount_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PriceLevel::release_amount() {
  // @@protoc_insertion_point(field_release:redepth.PriceLevel.amount)
  
  return amount_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PriceLevel::set_allocated_amount(::std::string* amount) {
  if (amount != NULL) {
    
  } else {
    
  }
  amount_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), amount);
  // @@protoc_insertion_point(field_set_allocated:redepth.PriceLevel.amount)
}

// uint64 order_count = 3;
inline void PriceLevel::clear_order_count() {
  order_count_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 PriceLevel::order_count() const {
  // @@protoc_insertion_point(field_get:redepth.PriceLevel.order_count)
  return order_count_;
}
inline void PriceLevel::set_order_count(::google::protobuf::uint64 value) {
  
  order_count_ = value;
  // @@protoc_insertion_point(field_set:redepth.PriceLevel.order_count)
}

// -------------------------------------------------------------------

// Depth

// repeated .redepth.PriceLevel asks = 2;
inline int Depth::asks_size() const {
  return asks_.size();
}
inline void Depth::clear_asks() {
  asks_.Clear();
}
inline ::redepth::PriceLevel* Depth::mutable_asks(int index) {
  // @@protoc_insertion_point(field_mutable:redepth.Depth.asks)
  return asks_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::redepth::PriceLevel >*
Depth::mutable_asks() {
  // @@protoc_insertion_point(field_mutable_list:redepth.Depth.asks)
  return &asks_;
}
inline const ::redepth::PriceLevel& Depth::asks(int index) const {
  // @@protoc_insertion_point(field_get:redepth.Depth.asks)
  return asks_.Get(index);
}
inline ::redepth::PriceLevel* Depth::add_asks() {
  // @@protoc_insertion_point(field_add:redepth.Depth.asks)
  return asks_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::redepth::PriceLevel >&
Depth::asks() const {
  // @@protoc_insertion_point(field_list:redepth.Depth.asks)
  return asks_;
}

// repeated .redepth.PriceLevel bids = 3;
inline int Depth::bids_size() const {
  return bids_.size();
}
inline void Depth::clear_bids() {
  bids_.Clear();
}
inline ::redepth::PriceLevel* Depth::mutable_bids(int index) {
  // @@protoc_insertion_point(field_mutable:redepth.Depth.bids)
  return bids_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::redepth::PriceLevel >*
Depth::mutable_bids() {
  // @@protoc_insertion_point(field_mutable_list:redepth.Depth.bids)
  return &bids_;
}
inline const ::redepth::PriceLevel& Depth::bids(int index) const {
  // @@protoc_insertion_point(field_get:redepth.Depth.bids)
  return bids_.Get(index);
}
inline ::redepth::PriceLevel* Depth::add_bids() {
  // @@protoc_insertion_point(field_add:redepth.Depth.bids)
  return bids_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::redepth::PriceLevel >&
Depth::bids() const {
  // @@protoc_insertion_point(field_list:redepth.Depth.bids)
  return bids_;
}

// uint64 change_id = 4;
inline void Depth::clear_change_id() {
  change_id_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 Depth::change_id() const {
  // @@protoc_insertion_point(field_get:redepth.Depth.change_id)
  return change_id_;
}
inline void Depth::set_change_id(::google::protobuf::uint64 value) {
  
  change_id_ = value;
  // @@protoc_insertion_point(field_set:redepth.Depth.change_id)
}

// string updated_at = 5;
inline void Depth::clear_updated_at() {
  updated_at_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Depth::updated_at() const {
  // @@protoc_insertion_point(field_get:redepth.Depth.updated_at)
  return updated_at_.GetNoArena();
}
inline void Depth::set_updated_at(const ::std::string& value) {
  
  updated_at_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:redepth.Depth.updated_at)
}
#if LANG_CXX11
inline void Depth::set_updated_at(::std::string&& value) {
  
  updated_at_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:redepth.Depth.updated_at)
}
#endif
inline void Depth::set_updated_at(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  updated_at_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:redepth.Depth.updated_at)
}
inline void Depth::set_updated_at(const char* value, size_t size) {
  
  updated_at_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:redepth.Depth.updated_at)
}
inline ::std::string* Depth::mutable_updated_at() {
  
  // @@protoc_insertion_point(field_mutable:redepth.Depth.updated_at)
  return updated_at_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Depth::release_updated_at() {
  // @@protoc_insertion_point(field_release:redepth.Depth.updated_at)
  
  return updated_at_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Depth::set_allocated_updated_at(::std::string* updated_at) {
  if (updated_at != NULL) {
    
  } else {
    
  }
  updated_at_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), updated_at);
  // @@protoc_insertion_point(field_set_allocated:redepth.Depth.updated_at)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace redepth

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_INCLUDED_depth_2eproto
