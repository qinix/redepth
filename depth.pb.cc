// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: depth.proto

#include "depth.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_depth_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_depth_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_PriceLevel;
}  // namespace protobuf_depth_2eproto
namespace redepth {
class PriceLevelDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PriceLevel>
      _instance;
} _PriceLevel_default_instance_;
class DepthDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Depth>
      _instance;
} _Depth_default_instance_;
}  // namespace redepth
namespace protobuf_depth_2eproto {
static void InitDefaultsPriceLevel() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::redepth::_PriceLevel_default_instance_;
    new (ptr) ::redepth::PriceLevel();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::redepth::PriceLevel::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_PriceLevel =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsPriceLevel}, {}};

static void InitDefaultsDepth() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::redepth::_Depth_default_instance_;
    new (ptr) ::redepth::Depth();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::redepth::Depth::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_Depth =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsDepth}, {
      &protobuf_depth_2eproto::scc_info_PriceLevel.base,}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_PriceLevel.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Depth.base);
}

::google::protobuf::Metadata file_level_metadata[2];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::redepth::PriceLevel, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::redepth::PriceLevel, price_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::redepth::PriceLevel, amount_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::redepth::PriceLevel, order_count_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::redepth::Depth, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::redepth::Depth, asks_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::redepth::Depth, bids_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::redepth::Depth, change_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::redepth::Depth, updated_at_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::redepth::PriceLevel)},
  { 8, -1, sizeof(::redepth::Depth)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::redepth::_PriceLevel_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::redepth::_Depth_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "depth.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 2);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\013depth.proto\022\007redepth\"@\n\nPriceLevel\022\r\n\005"
      "price\030\001 \001(\t\022\016\n\006amount\030\002 \001(\t\022\023\n\013order_cou"
      "nt\030\003 \001(\004\"t\n\005Depth\022!\n\004asks\030\002 \003(\0132\023.redept"
      "h.PriceLevel\022!\n\004bids\030\003 \003(\0132\023.redepth.Pri"
      "ceLevel\022\021\n\tchange_id\030\004 \001(\004\022\022\n\nupdated_at"
      "\030\005 \001(\tb\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 214);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "depth.proto", &protobuf_RegisterTypes);
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_depth_2eproto
namespace redepth {

// ===================================================================

void PriceLevel::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PriceLevel::kPriceFieldNumber;
const int PriceLevel::kAmountFieldNumber;
const int PriceLevel::kOrderCountFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PriceLevel::PriceLevel()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_depth_2eproto::scc_info_PriceLevel.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:redepth.PriceLevel)
}
PriceLevel::PriceLevel(const PriceLevel& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  price_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.price().size() > 0) {
    price_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.price_);
  }
  amount_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.amount().size() > 0) {
    amount_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.amount_);
  }
  order_count_ = from.order_count_;
  // @@protoc_insertion_point(copy_constructor:redepth.PriceLevel)
}

void PriceLevel::SharedCtor() {
  price_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  amount_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  order_count_ = GOOGLE_ULONGLONG(0);
}

PriceLevel::~PriceLevel() {
  // @@protoc_insertion_point(destructor:redepth.PriceLevel)
  SharedDtor();
}

void PriceLevel::SharedDtor() {
  price_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  amount_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void PriceLevel::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* PriceLevel::descriptor() {
  ::protobuf_depth_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_depth_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PriceLevel& PriceLevel::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_depth_2eproto::scc_info_PriceLevel.base);
  return *internal_default_instance();
}


void PriceLevel::Clear() {
// @@protoc_insertion_point(message_clear_start:redepth.PriceLevel)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  price_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  amount_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  order_count_ = GOOGLE_ULONGLONG(0);
  _internal_metadata_.Clear();
}

bool PriceLevel::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:redepth.PriceLevel)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string price = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_price()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->price().data(), static_cast<int>(this->price().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "redepth.PriceLevel.price"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string amount = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_amount()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->amount().data(), static_cast<int>(this->amount().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "redepth.PriceLevel.amount"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 order_count = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &order_count_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:redepth.PriceLevel)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:redepth.PriceLevel)
  return false;
#undef DO_
}

void PriceLevel::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:redepth.PriceLevel)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string price = 1;
  if (this->price().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->price().data(), static_cast<int>(this->price().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "redepth.PriceLevel.price");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->price(), output);
  }

  // string amount = 2;
  if (this->amount().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->amount().data(), static_cast<int>(this->amount().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "redepth.PriceLevel.amount");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->amount(), output);
  }

  // uint64 order_count = 3;
  if (this->order_count() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(3, this->order_count(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:redepth.PriceLevel)
}

::google::protobuf::uint8* PriceLevel::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:redepth.PriceLevel)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string price = 1;
  if (this->price().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->price().data(), static_cast<int>(this->price().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "redepth.PriceLevel.price");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->price(), target);
  }

  // string amount = 2;
  if (this->amount().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->amount().data(), static_cast<int>(this->amount().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "redepth.PriceLevel.amount");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->amount(), target);
  }

  // uint64 order_count = 3;
  if (this->order_count() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(3, this->order_count(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:redepth.PriceLevel)
  return target;
}

size_t PriceLevel::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:redepth.PriceLevel)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string price = 1;
  if (this->price().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->price());
  }

  // string amount = 2;
  if (this->amount().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->amount());
  }

  // uint64 order_count = 3;
  if (this->order_count() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->order_count());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PriceLevel::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:redepth.PriceLevel)
  GOOGLE_DCHECK_NE(&from, this);
  const PriceLevel* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PriceLevel>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:redepth.PriceLevel)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:redepth.PriceLevel)
    MergeFrom(*source);
  }
}

void PriceLevel::MergeFrom(const PriceLevel& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:redepth.PriceLevel)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.price().size() > 0) {

    price_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.price_);
  }
  if (from.amount().size() > 0) {

    amount_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.amount_);
  }
  if (from.order_count() != 0) {
    set_order_count(from.order_count());
  }
}

void PriceLevel::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:redepth.PriceLevel)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PriceLevel::CopyFrom(const PriceLevel& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:redepth.PriceLevel)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PriceLevel::IsInitialized() const {
  return true;
}

void PriceLevel::Swap(PriceLevel* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PriceLevel::InternalSwap(PriceLevel* other) {
  using std::swap;
  price_.Swap(&other->price_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  amount_.Swap(&other->amount_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(order_count_, other->order_count_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata PriceLevel::GetMetadata() const {
  protobuf_depth_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_depth_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Depth::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Depth::kAsksFieldNumber;
const int Depth::kBidsFieldNumber;
const int Depth::kChangeIdFieldNumber;
const int Depth::kUpdatedAtFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Depth::Depth()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_depth_2eproto::scc_info_Depth.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:redepth.Depth)
}
Depth::Depth(const Depth& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      asks_(from.asks_),
      bids_(from.bids_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  updated_at_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.updated_at().size() > 0) {
    updated_at_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.updated_at_);
  }
  change_id_ = from.change_id_;
  // @@protoc_insertion_point(copy_constructor:redepth.Depth)
}

void Depth::SharedCtor() {
  updated_at_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  change_id_ = GOOGLE_ULONGLONG(0);
}

Depth::~Depth() {
  // @@protoc_insertion_point(destructor:redepth.Depth)
  SharedDtor();
}

void Depth::SharedDtor() {
  updated_at_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Depth::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Depth::descriptor() {
  ::protobuf_depth_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_depth_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Depth& Depth::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_depth_2eproto::scc_info_Depth.base);
  return *internal_default_instance();
}


void Depth::Clear() {
// @@protoc_insertion_point(message_clear_start:redepth.Depth)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  asks_.Clear();
  bids_.Clear();
  updated_at_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  change_id_ = GOOGLE_ULONGLONG(0);
  _internal_metadata_.Clear();
}

bool Depth::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:redepth.Depth)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .redepth.PriceLevel asks = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_asks()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .redepth.PriceLevel bids = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_bids()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 change_id = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &change_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string updated_at = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_updated_at()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->updated_at().data(), static_cast<int>(this->updated_at().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "redepth.Depth.updated_at"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:redepth.Depth)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:redepth.Depth)
  return false;
#undef DO_
}

void Depth::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:redepth.Depth)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .redepth.PriceLevel asks = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->asks_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->asks(static_cast<int>(i)),
      output);
  }

  // repeated .redepth.PriceLevel bids = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->bids_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3,
      this->bids(static_cast<int>(i)),
      output);
  }

  // uint64 change_id = 4;
  if (this->change_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(4, this->change_id(), output);
  }

  // string updated_at = 5;
  if (this->updated_at().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->updated_at().data(), static_cast<int>(this->updated_at().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "redepth.Depth.updated_at");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->updated_at(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:redepth.Depth)
}

::google::protobuf::uint8* Depth::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:redepth.Depth)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .redepth.PriceLevel asks = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->asks_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->asks(static_cast<int>(i)), deterministic, target);
  }

  // repeated .redepth.PriceLevel bids = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->bids_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->bids(static_cast<int>(i)), deterministic, target);
  }

  // uint64 change_id = 4;
  if (this->change_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(4, this->change_id(), target);
  }

  // string updated_at = 5;
  if (this->updated_at().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->updated_at().data(), static_cast<int>(this->updated_at().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "redepth.Depth.updated_at");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->updated_at(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:redepth.Depth)
  return target;
}

size_t Depth::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:redepth.Depth)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .redepth.PriceLevel asks = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->asks_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->asks(static_cast<int>(i)));
    }
  }

  // repeated .redepth.PriceLevel bids = 3;
  {
    unsigned int count = static_cast<unsigned int>(this->bids_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->bids(static_cast<int>(i)));
    }
  }

  // string updated_at = 5;
  if (this->updated_at().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->updated_at());
  }

  // uint64 change_id = 4;
  if (this->change_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->change_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Depth::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:redepth.Depth)
  GOOGLE_DCHECK_NE(&from, this);
  const Depth* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Depth>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:redepth.Depth)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:redepth.Depth)
    MergeFrom(*source);
  }
}

void Depth::MergeFrom(const Depth& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:redepth.Depth)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  asks_.MergeFrom(from.asks_);
  bids_.MergeFrom(from.bids_);
  if (from.updated_at().size() > 0) {

    updated_at_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.updated_at_);
  }
  if (from.change_id() != 0) {
    set_change_id(from.change_id());
  }
}

void Depth::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:redepth.Depth)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Depth::CopyFrom(const Depth& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:redepth.Depth)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Depth::IsInitialized() const {
  return true;
}

void Depth::Swap(Depth* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Depth::InternalSwap(Depth* other) {
  using std::swap;
  CastToBase(&asks_)->InternalSwap(CastToBase(&other->asks_));
  CastToBase(&bids_)->InternalSwap(CastToBase(&other->bids_));
  updated_at_.Swap(&other->updated_at_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(change_id_, other->change_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Depth::GetMetadata() const {
  protobuf_depth_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_depth_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace redepth
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::redepth::PriceLevel* Arena::CreateMaybeMessage< ::redepth::PriceLevel >(Arena* arena) {
  return Arena::CreateInternal< ::redepth::PriceLevel >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::redepth::Depth* Arena::CreateMaybeMessage< ::redepth::Depth >(Arena* arena) {
  return Arena::CreateInternal< ::redepth::Depth >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
